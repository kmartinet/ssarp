% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_SAR.R
\name{create_SAR}
\alias{create_SAR}
\title{Create a species-area relationship (SAR) plot}
\usage{
create_SAR(occurrences, npsi = 1, visualize = FALSE)
}
\arguments{
\item{occurrences}{The dataframe output by \code{ssarp::find_areas()} (or if
using  a custom dataframe, ensure that it has the following columns:
specificEpithet, areas)}

\item{npsi}{The maximum number of breakpoints to estimate for model
selection.  Default: 1}

\item{visualize}{(boolean) Whether the plot should be displayed when the
function is called. Default: FALSE}
}
\value{
A list of class SAR with 5 items including:
\itemize{
\item \code{summary}: the summary output
\item \code{segObj} or \code{linObj}: the regression object (\code{segObj} when segmented,
\code{linObj} when linear)
\item \code{aggDF}: the aggregated dataframe used to create the plot
\item \code{AICscores}: the AIC scores generated during model selection
\item \code{AllModels}: a list of models created in model selection, labeled by
number of breakpoints
}
}
\description{
Use segmented regression to create a species-area relationship (SAR) plot.
The X axis represents log(island area) and the Y axis represents log(number
of species)
}
\details{
If the user would prefer to create their own plot of the
\code{ssarp::create_SAR()} output, the \code{aggDF} element of the returned list
includes the raw points from the plot created here. They can be accessed
as demonstrated in the Examples section.
}
\examples{
# The GBIF key for the Anolis genus is 8782549
# Read in example dataset filtered from:
#  dat <- rgbif::occ_search(taxonKey = 8782549,
#                           hasCoordinate = TRUE,
#                           limit = 10000)
dat <- read.csv(system.file("extdata",
                            "ssarp_Example_Dat.csv",
                            package = "ssarp"))
land <- find_land(occurrences = dat)
areas <- find_areas(occs = land)

seg <- create_SAR(occurrences = areas,
                  npsi = 1,
                  visualize = FALSE)
plot(seg)
summary <- seg$summary
model_object <- seg$segObj
points <- seg$aggDF
}
